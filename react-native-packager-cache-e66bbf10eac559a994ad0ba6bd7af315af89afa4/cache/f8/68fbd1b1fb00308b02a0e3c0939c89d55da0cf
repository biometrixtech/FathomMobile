Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/Users/vdesai/Biometrix/FathomMobile/src/containers/kit/KitManagementView.js';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

var _reactNativeNetworkInfo = require('react-native-network-info');

var _reactNativeBleManager = require('react-native-ble-manager');

var _reactNativeBleManager2 = _interopRequireDefault(_reactNativeBleManager);

var _reactNativeLoopedCarousel = require('react-native-looped-carousel');

var _reactNativeLoopedCarousel2 = _interopRequireDefault(_reactNativeLoopedCarousel);

var _reactNativeCollapsible = require('react-native-collapsible');

var _reactNativeCollapsible2 = _interopRequireDefault(_reactNativeCollapsible);

var _reactNativePrompt = require('react-native-prompt');

var _reactNativePrompt2 = _interopRequireDefault(_reactNativePrompt);

var _api = require('@lib/api');

var _api2 = _interopRequireDefault(_api);

var _theme = require('@theme/');

var _ui = require('@ui/');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var accessoryDiscoverabilityInstruction = 'press & hold buttons simultaneously until the lights flash red and blue';

var KitManagementView = function (_Component) {
    _inherits(KitManagementView, _Component);

    function KitManagementView(props) {
        _classCallCheck(this, KitManagementView);

        var _this = _possibleConstructorReturn(this, (KitManagementView.__proto__ || Object.getPrototypeOf(KitManagementView)).call(this, props));

        _this.componentDidMount = function () {
            _reactNativeNetworkInfo.NetworkInfo.getSSID(function (ssid) {
                _this.setState({ SSID: ssid });
            });

            _reactNativeBleManager2.default.checkState();
            _this.handleDiscoverPeripheral = _this.handleDiscoverPeripheral.bind(_this);
            _this.handleBleStateChange = _this.handleBleStateChange.bind(_this);

            _reactNative.NativeAppEventEmitter.addListener('BleManagerDiscoverPeripheral', function (data) {
                _this.handleDiscoverPeripheral(data);
            });
            _reactNative.NativeAppEventEmitter.addListener('BleManagerDidUpdateState', function (data) {
                _this.handleBleStateChange(data);
            });
            _reactNative.NativeAppEventEmitter.addListener('BleManagerStopScan', function () {
                _this.setState({ scanning: false, resultMsg: { success: 'Finished scanning' } });
            });
        };

        _this.componentWillUnmount = function () {
            _reactNative.NativeAppEventEmitter.removeListener('BleManagerDiscoverPeripheral');
            _reactNative.NativeAppEventEmitter.removeListener('BleManagerDidUpdateState');
            _reactNative.NativeAppEventEmitter.removeListener('BleManagerStopScan');
        };

        _this.turnOnBluetooth = function () {
            return _reactNativeBleManager2.default.start({ showAlert: true }).then(function () {
                if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= 23) {
                    return _reactNative.PermissionsAndroid.check(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION).then(function (result) {
                        if (!result) {
                            return _reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION).then(function (res) {
                                if (res === 'denied') {
                                    throw new Error('Bluetooth inactive');
                                }
                                return null;
                            });
                        }
                        return null;
                    }).then(function () {
                        return _reactNativeBleManager2.default.enableBluetooth();
                    }).then(function () {
                        _this.refs.carousel.animateToPage(2);
                        return _this.setState({ index: 2 });
                    });
                }
                _this.refs.carousel.animateToPage(2);
                return _this.setState({ index: 2 });
            }).catch(function (error) {
                _this.refs.animateToPage(1);return _this.setState({ resultMsg: { error: 'Bluetooth inactive' }, index: 1 });
            });
        };

        _this.handleScan = function () {
            return _reactNativeBleManager2.default.scan([], 30, false).then(function () {
                return _this.setState({ scanning: true, resultMsg: { status: 'Scanning..' }, devicesFound: [] });
            }).catch(function (err) {
                return console.log(err);
            });
        };

        _this.toggleScanning = function (bool) {
            if (bool) {
                _this.setState({ scanning: true });
                return _this.handleScan();
            }
            _this.setState({ scanning: false, ble: null });
            return _reactNativeBleManager2.default.stopScan().then(function (res) {
                return _reactNativeBleManager2.default.checkState();
            });
        };

        _this.handleDiscoverPeripheral = function (data) {
            if (data.name && data.name.indexOf('fathom') > -1 && _this.state.devicesFound.every(function (device) {
                return device.id !== data.id;
            })) {
                console.log('Got new ble data', data);
                _this.state.devicesFound.push(data);
                return _this.setState({ ble: data, devicesFound: _this.state.devicesFound });
            }
            return null;
        };

        _this.handleBleStateChange = function (data) {
            if (data.state === 'off') {
                var index = _this.state.index > 1 ? 1 : _this.state.index;
                _this.refs.carousel.animateToPage(index);
                return _this.setState({ resultMsg: { error: 'Bluetooth inactive' }, index: index });
            }
            if (_this.state.index === 1) {
                return _this.turnOnBluetooth();
            }
            return _this.setState({ resultMsg: { error: null } });
        };

        _this.setSSID = function (ssid) {
            var dataArray = new Array(20);
            dataArray[0] = parseInt('0x04', 16);
            dataArray[1] = ssid.length;
            for (var i = 2; i < 20 && i - 2 < ssid.length; i += 1) {
                dataArray[i] = ssid.charCodeAt(i - 2);
            }
            for (var _i = ssid.length + 2; _i < 20; _i += 1) {
                dataArray[_i] = parseInt('0x00', 16);
            }
            console.log('SSID Data Array: ', dataArray);
            return _reactNativeBleManager2.default.write(_this.state.data.id, '3282ae19-ab8b-f495-7544-67e11bb6223f', 'a268ae6f-3433-d999-4e44-42e82070d3de', dataArray).then(function () {
                if (ssid.length <= 18) {
                    return null;
                }
                dataArray = new Array(20);
                dataArray[0] = parseInt('0x05', 16);
                dataArray[1] = ssid.length - 18;
                for (var _i2 = 2; _i2 - 2 < ssid.length - 18; _i2 += 1) {
                    dataArray[_i2] = ssid.charCodeAt(_i2 + 16);
                }
                for (var _i3 = ssid.length - 16; _i3 < 20; _i3 += 1) {
                    dataArray[_i3] = parseInt('0x00', 16);
                }
                console.log('SSID Data Array 2: ', dataArray);
                return _reactNativeBleManager2.default.write(_this.state.data.id, '3282ae19-ab8b-f495-7544-67e11bb6223f', 'a268ae6f-3433-d999-4e44-42e82070d3de', dataArray);
            });
        };

        _this.setWiFiPassword = function (passwordAttempt) {
            var dataArray = new Array(20);
            dataArray[0] = parseInt('0x06', 16);
            dataArray[1] = passwordAttempt.length;
            for (var i = 2; i < 20 && i - 2 < passwordAttempt.length; i += 1) {
                dataArray[i] = passwordAttempt.charCodeAt(i - 2);
            }
            for (var _i4 = passwordAttempt.length + 2; _i4 < 20; _i4 += 1) {
                dataArray[_i4] = parseInt('0x00', 16);
            }
            console.log('Password Data Array: ', dataArray);
            return _reactNativeBleManager2.default.write(_this.state.data.id, '3282ae19-ab8b-f495-7544-67e11bb6223f', 'a268ae6f-3433-d999-4e44-42e82070d3de', dataArray).then(function () {
                if (passwordAttempt.length <= 18) {
                    return null;
                }
                dataArray = new Array(20);
                dataArray[0] = parseInt('0x07', 16);
                dataArray[1] = passwordAttempt.length - 18;
                for (var _i5 = 2; _i5 - 2 < passwordAttempt.length - 18; _i5 += 1) {
                    dataArray[_i5] = passwordAttempt.charCodeAt(_i5 + 16);
                }
                for (var _i6 = passwordAttempt.length - 16; _i6 < 20; _i6 += 1) {
                    dataArray[_i6] = parseInt('0x00', 16);
                }
                console.log('Password Data Array 2: ', dataArray);
                return _reactNativeBleManager2.default.write(_this.state.data.id, '3282ae19-ab8b-f495-7544-67e11bb6223f', 'a268ae6f-3433-d999-4e44-42e82070d3de', dataArray);
            });
        };

        _this.setupWiFi = function (ssid, password) {
            return _this.setSSID(ssid).then(function () {
                return _this.setWiFiPassword(password);
            }).then(function () {
                var dataArray = new Array(20);
                dataArray[0] = parseInt('0x08', 16);
                dataArray[1] = parseInt('0x00', 16);
                for (var i = 2; i < 20; i += 1) {
                    dataArray[i] = parseInt('0x00', 16);
                }
                return _reactNativeBleManager2.default.write(_this.state.data.id, '3282ae19-ab8b-f495-7544-67e11bb6223f', 'a268ae6f-3433-d999-4e44-42e82070d3de', dataArray);
            }).then(function () {
                return _reactNativeBleManager2.default.read(_this.state.data.id, '3282ae19-ab8b-f495-7544-67e11bb6223f', 'a268ae6f-3433-d999-4e44-42e82070d3de');
            }).then(function (readData) {
                return console.log(readData);
            }).then(function () {
                return setTimeout(function () {
                    return _this.props.upsertAccessory(_this.state.data.id, {
                        name: _this.state.data.name,
                        team_id: _this.props.user.teams[0].id
                    });
                }, 3000);
            }).catch(function (err) {
                console.log(err);_this.setState({ promptVisible: true });
            });
        };

        _this.connect = function (data) {
            return _reactNativeBleManager2.default.connect(data.id).then(function () {
                return _reactNativeBleManager2.default.retrieveServices(data.id);
            }).then(function (peripheralData) {
                return _this.setState({ data: data, promptVisible: true });
            }).catch(function (err) {
                console.log(err);
                return err;
            });
        };

        _this._onLayoutDidChange = function (e) {
            var layout = e.nativeEvent.layout;
            _this.setState({ size: { width: layout.width, height: layout.height } });
        };

        _this.render = function () {
            return _react2.default.createElement(
                _reactNative.View,
                { style: { flex: 1 }, onLayout: _this._onLayoutDidChange, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 247
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: { alignItems: 'center', backgroundColor: _theme.AppColors.brand.light }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 248
                        }
                    },
                    _react2.default.createElement(_ui.Spacer, { size: 25, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 249
                        }
                    }),
                    _react2.default.createElement(
                        _ui.Text,
                        { h1: true, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 250
                            }
                        },
                        _this.state.index === 0 ? 'Activate Kit' : _this.state.index === 1 ? 'Turn on Bluetooth' : 'Scan for Kit'
                    ),
                    _react2.default.createElement(_ui.Spacer, { size: 50, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 251
                        }
                    })
                ),
                _react2.default.createElement(
                    _reactNativeLoopedCarousel2.default,
                    {
                        ref: 'carousel',
                        autoplay: false,
                        currentPage: _this.state.index,
                        swipe: false,
                        style: {
                            position: 'absolute',
                            elevation: 10,
                            bottom: 15,
                            backgroundColor: '#FFFFFF',
                            alignSelf: 'center',
                            shadowOffset: { width: 1, height: 3 },
                            shadowOpacity: 0.7,
                            shadowRadius: 2,
                            width: _theme.AppSizes.screen.widthEightTenths,
                            height: _theme.AppSizes.screen.heightThreeQuarters
                        },
                        bullets: true,
                        bulletStyle: { borderColor: _theme.AppColors.brand.blue },
                        chosenBulletStyle: { backgroundColor: _theme.AppColors.brand.blue },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 253
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [_theme.AppStyles.containerCentered, { flex: 1 }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 274
                            }
                        },
                        _react2.default.createElement(_reactNative.View, { style: { flex: 1 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 275
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [_theme.AppStyles.containerCentered, { flex: 1 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 276
                                }
                            },
                            _react2.default.createElement(_reactNative.Image, { style: { resizeMode: 'contain', width: 400, height: 400 }, source: require('@images/Instructions_Kit-Contents-Top_v01.png'), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 277
                                }
                            })
                        ),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: { flex: 1 }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 279
                                }
                            },
                            _react2.default.createElement(
                                _ui.FormLabel,
                                { labelStyle: [_theme.AppStyles.h4], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 280
                                    }
                                },
                                accessoryDiscoverabilityInstruction
                            ),
                            _react2.default.createElement(_ui.Spacer, {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 283
                                }
                            }),
                            _react2.default.createElement(_ui.Button, { title: 'Next', onPress: function onPress() {
                                    _this.refs.carousel.animateToPage(1);_this.setState({ index: 1 });return _reactNativeBleManager2.default.checkState();
                                }, raised: true, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 284
                                }
                            })
                        ),
                        _react2.default.createElement(_reactNative.View, { style: { flex: 1 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 286
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [_theme.AppStyles.containerCentered, { flex: 1 }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 290
                            }
                        },
                        _react2.default.createElement(_reactNative.View, { style: { flex: 1 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 291
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: { flex: 1 }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 292
                                }
                            },
                            _react2.default.createElement(_reactNativeElements.Icon, { name: 'bluetooth', containerStyle: { alignSelf: 'center' }, size: 30, color: _theme.AppColors.brand.primary, reverse: true, onPress: function onPress() {
                                    return _this.turnOnBluetooth();
                                }, raised: true, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 293
                                }
                            })
                        ),
                        _react2.default.createElement(_reactNative.View, { style: { flex: 1 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 295
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: { flex: 1 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 299
                            }
                        },
                        _react2.default.createElement(_reactNativePrompt2.default, {
                            title: _this.state.SSID + ' Password:',
                            placeholder: 'Password',
                            visible: _this.state.promptVisible,
                            onCancel: function onCancel() {
                                return _this.setState({ promptVisible: false });
                            },
                            onSubmit: function onSubmit(value) {
                                _this.setState({ promptVisible: false });
                                return _this.setupWiFi(_this.state.SSID, value);
                            },
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 300
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [_theme.AppStyles.containerCentered, { flex: 3 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 310
                                }
                            },
                            _react2.default.createElement(_ui.Button, {
                                title: _this.state.scanning ? 'Stop Scan' : 'Start Scan',
                                icon: { name: '' + (_this.state.scanning ? 'stop' : 'play-arrow') },
                                buttonStyle: { backgroundColor: '' + (_this.state.scanning ? _theme.AppColors.brand.red : _theme.AppColors.brand.primary) },
                                onPress: function onPress() {
                                    return _this.toggleScanning(!_this.state.scanning);
                                },
                                raised: true,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 311
                                }
                            }),
                            _react2.default.createElement(_ui.Spacer, { size: 5, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 318
                                }
                            }),
                            _react2.default.createElement(
                                _ui.Text,
                                { style: { color: _theme.AppColors.brand.yellow }, onPress: function onPress() {
                                        return _this.setState({ isCollapsed: !_this.state.isCollapsed });
                                    }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 319
                                    }
                                },
                                'Can\'t find your device?'
                            ),
                            _react2.default.createElement(_ui.Spacer, { size: 5, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 320
                                }
                            }),
                            _react2.default.createElement(
                                _reactNativeCollapsible2.default,
                                { collapsed: _this.state.isCollapsed, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 321
                                    }
                                },
                                _react2.default.createElement(
                                    _ui.FormLabel,
                                    { labelStyle: [_theme.AppStyles.h4], __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 322
                                        }
                                    },
                                    accessoryDiscoverabilityInstruction + '. Then rescan.'
                                )
                            )
                        ),
                        _react2.default.createElement(_ui.Spacer, {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 327
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: { flex: 4 }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 328
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.ScrollView,
                                {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 329
                                    }
                                },
                                _this.state.devicesFound.map(function (device) {
                                    return _react2.default.createElement(_ui.ListItem, { key: device.id, title: device.name, onPress: function onPress() {
                                            return _this.connect(device);
                                        }, titleContainerStyle: { alignSelf: 'center' }, hideChevron: true, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 332
                                        }
                                    });
                                })
                            )
                        ),
                        _react2.default.createElement(_reactNative.View, { style: { flex: 1 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 337
                            }
                        })
                    )
                )
            );
        };

        _this.state = {
            ble: null,
            scanning: false,
            index: 0,
            devicesFound: [],
            isCollapsed: true,
            size: {},
            SSID: null,
            data: null,
            resultMsg: {
                status: null,
                success: null,
                error: null
            }
        };
        return _this;
    }

    return KitManagementView;
}(_react.Component);

KitManagementView.componentName = 'KitManagementView';
KitManagementView.propTypes = {
    user: _react.PropTypes.object,
    upsertAccessory: _react.PropTypes.func.isRequired
};
KitManagementView.defaultProps = {
    user: {}
};
exports.default = KitManagementView;