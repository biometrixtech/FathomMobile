Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp2,
    _jsxFileName = '/Users/vdesai/Biometrix/FathomMobile/src/containers/ui/DrawerContainer.js';

var _reactNative = require('react-native');

var _reactRedux = require('react-redux');

var _reactNativeSideMenu = require('react-native-side-menu');

var _reactNativeSideMenu2 = _interopRequireDefault(_reactNativeSideMenu);

var _reactNativeRouterFlux = require('react-native-router-flux');

var _theme = require('@theme/');

var _MenuContainer = require('@containers/ui/Menu/MenuContainer');

var _MenuContainer2 = _interopRequireDefault(_MenuContainer);

var _actions = require('@redux/sidemenu/actions');

var SideMenuActions = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    Drawer: {
        displayName: 'Drawer'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/Users/vdesai/Biometrix/FathomMobile/src/containers/ui/DrawerContainer.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var mapStateToProps = function mapStateToProps(state) {
    return {
        sideMenuIsOpen: state.sideMenu.isOpen
    };
};

var mapDispatchToProps = {
    toggleSideMenu: SideMenuActions.toggle,
    closeSideMenu: SideMenuActions.close
};

var Drawer = _wrapComponent('Drawer')((_temp2 = _class = function (_Component) {
    _inherits(Drawer, _Component);

    function Drawer() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Drawer);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call.apply(_ref, [this].concat(args))), _this), _this.onSideMenuChange = function (isOpen) {
            if (isOpen !== _this.props.sideMenuIsOpen) {
                _this.props.toggleSideMenu();
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Drawer, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var state = this.props.navigationState;
            var children = state.children;

            return _react3.default.createElement(
                _reactNativeSideMenu2.default,
                {
                    ref: function ref(a) {
                        _this2.rootSidebarMenu = a;
                    },
                    openMenuOffset: _theme.AppSizes.screen.width * 0.75,
                    menu: _react3.default.createElement(_MenuContainer2.default, {
                        closeSideMenu: this.props.closeSideMenu,
                        ref: function ref(b) {
                            _this2.rootSidebarMenuMenu = b;
                        },
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 68
                        }
                    }),
                    isOpen: this.props.sideMenuIsOpen,
                    onChange: this.onSideMenuChange,
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 64
                    }
                },
                _react3.default.createElement(
                    _reactNative.View,
                    { style: { backgroundColor: '#000', flex: 1 }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 76
                        }
                    },
                    _react3.default.createElement(_reactNativeRouterFlux.DefaultRenderer, { navigationState: children[0], onNavigate: this.props.onNavigate, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 77
                        }
                    })
                )
            );
        }
    }]);

    return Drawer;
}(_react2.Component), _class.componentName = 'Drawer', _class.propTypes = {
    navigationState: _react2.PropTypes.shape({}),
    onNavigate: _react2.PropTypes.func,
    sideMenuIsOpen: _react2.PropTypes.bool,
    closeSideMenu: _react2.PropTypes.func.isRequired,
    toggleSideMenu: _react2.PropTypes.func.isRequired
}, _class.defaultProps = {
    navigationState: null,
    onNavigate: null,
    sideMenuIsOpen: null
}, _temp2));

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Drawer);