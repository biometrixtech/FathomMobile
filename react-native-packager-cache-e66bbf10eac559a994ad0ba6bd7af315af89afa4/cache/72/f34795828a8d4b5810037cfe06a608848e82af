Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/Users/vdesai/Biometrix/FathomMobile/src/components/ui/ListItem.js';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNativeElements = require('react-native-elements');

var _theme = require('@theme/');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CustomListItem = function (_Component) {
    _inherits(CustomListItem, _Component);

    function CustomListItem() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, CustomListItem);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CustomListItem.__proto__ || Object.getPrototypeOf(CustomListItem)).call.apply(_ref, [this].concat(args))), _this), _this.listItemProps = function () {
            var props = _extends({
                title: 'Coming Soon...',
                chevronColor: _theme.AppColors.textSecondary,
                underlayColor: _theme.AppColors.border
            }, _this.props, {
                containerStyle: [{
                    backgroundColor: _theme.AppColors.listItemBackground,
                    borderTopColor: _theme.AppColors.border,
                    borderBottomColor: _theme.AppColors.border
                }],
                titleStyle: [_theme.AppStyles.baseText],
                subtitleStyle: [_theme.AppStyles.subtext]
            });

            if (_this.props.containerStyle) {
                props.containerStyle.push(_this.props.containerStyle);
            }

            if (_this.props.titleStyle) {
                props.titleStyle.push(_this.props.titleStyle);
            }

            if (_this.props.subtitleStyle) {
                props.subtitleStyle.push(_this.props.subtitleStyle);
            }

            return props;
        }, _this.render = function () {
            return _react2.default.createElement(_reactNativeElements.ListItem, _extends({}, _this.listItemProps(), {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 67
                }
            }));
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    return CustomListItem;
}(_react.Component);

CustomListItem.propTypes = {
    containerStyle: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.shape({})]),
    titleStyle: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.shape({})]),
    subtitleStyle: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.shape({})])
};
CustomListItem.defaultProps = {
    containerStyle: [],
    titleStyle: [],
    subtitleStyle: []
};
exports.default = CustomListItem;