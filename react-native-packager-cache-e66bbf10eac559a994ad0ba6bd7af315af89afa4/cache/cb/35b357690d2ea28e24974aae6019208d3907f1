Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/Users/vdesai/Biometrix/FathomMobile/src/components/general/WebView.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _theme = require('@theme/');

var _Loading = require('@components/general/Loading');

var _Loading2 = babelHelpers.interopRequireDefault(_Loading);

var _Error = require('@components/general/Error');

var _Error2 = babelHelpers.interopRequireDefault(_Error);

var styles = _reactNative.StyleSheet.create({
    container: {
        backgroundColor: _theme.AppColors.background
    }
});

var AppWebView = function (_Component) {
    babelHelpers.inherits(AppWebView, _Component);

    function AppWebView(props) {
        babelHelpers.classCallCheck(this, AppWebView);

        var _this = babelHelpers.possibleConstructorReturn(this, (AppWebView.__proto__ || Object.getPrototypeOf(AppWebView)).call(this, props));

        _this.componentDidMount = function () {
            _reactNative.InteractionManager.runAfterInteractions(function () {
                _this.setState({ loading: false });
            });
        };

        _this.onNavigationStateChange = function (navState) {
            _this.state.webViewURL = navState.url;
            if (_this.props.onNavigationStateChange) {
                _this.props.onNavigationStateChange(navState.url);
            }
        };

        _this.render = function () {
            var _this$state = _this.state,
                webViewURL = _this$state.webViewURL,
                loading = _this$state.loading;


            if (loading) {
                return _react2.default.createElement(_Loading2.default, {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 69
                    }
                });
            }
            if (!webViewURL) {
                return _react2.default.createElement(_Error2.default, { type: 'URL not defined.', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 70
                    }
                });
            }

            return _react2.default.createElement(_reactNative.WebView, {
                scalesPageToFit: true,
                startInLoadingState: true,
                source: { uri: webViewURL },
                automaticallyAdjustContentInsets: false,
                style: [_theme.AppStyles.container, styles.container],
                onNavigationStateChange: _this.onNavigationStateChange,
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 73
                }
            });
        };

        _this.state = {
            loading: true,
            webViewURL: props.url || null
        };
        return _this;
    }

    return AppWebView;
}(_react.Component);

AppWebView.componentName = 'AppWebView';
AppWebView.propTypes = {
    url: _react.PropTypes.string.isRequired,
    onNavigationStateChange: _react.PropTypes.func
};
AppWebView.defaultProps = {
    onNavigationStateChange: null
};
exports.default = AppWebView;