Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/Users/vdesai/Biometrix/FathomMobile/src/components/ui/FormLabel.js';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNativeElements = require('react-native-elements');

var _theme = require('@theme/');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CustomFormLabel = function (_Component) {
    _inherits(CustomFormLabel, _Component);

    function CustomFormLabel() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, CustomFormLabel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CustomFormLabel.__proto__ || Object.getPrototypeOf(CustomFormLabel)).call.apply(_ref, [this].concat(args))), _this), _this.labelProps = function () {
            var props = _extends({}, _this.props, {
                labelStyle: [{
                    color: _theme.AppColors.textPrimary,
                    fontFamily: _theme.AppFonts.base.family,
                    fontWeight: _theme.AppFonts.h0.fontWeight
                }]
            });

            if (_this.props.labelStyle) {
                props.labelStyle.push(_this.props.labelStyle);
            }

            return props;
        }, _this.render = function () {
            return _react2.default.createElement(
                _reactNativeElements.FormLabel,
                _extends({}, _this.labelProps(), {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 47
                    }
                }),
                _this.props.children
            );
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    return CustomFormLabel;
}(_react.Component);

CustomFormLabel.propTypes = {
    labelStyle: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.shape({})]),
    children: _react.PropTypes.node
};
CustomFormLabel.defaultProps = {
    containerStyle: [],
    labelStyle: [],
    children: null
};
exports.default = CustomFormLabel;